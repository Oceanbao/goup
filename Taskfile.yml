version: "3"

dotenv: [".env"]

# Variables used in tasks
vars:
  # GOOS: linux # You can override this based on your target platform
  # GOARCH: amd64
  BINARY_NAME: app # Replace with your application's binary name

tasks:
  confirm:
    cmds:
      - echo -n 'Are you sure? [y/N] ' && read ans && [ ${ans:-N} = y ]

  gomod:
    desc: Check mod.
    cmds:
      - go mod tidy
      - go mod verify

  goformat:
    desc: Go format.
    cmds:
      - go fmt ./...

  goimports:
    desc: goimports.
    cmds:
      - goimports -w .

  govet:
    desc: go vet all.
    cmds:
      - go vet ./...

  gocheck:
    desc: Run all checks.
    cmds:
      - task: gomod
      - task: goformat
      - task: goimports
      - task: govet

  goci:
    desc: Run golangci-lint.
    cmds:
      - golangci-lint run

  default:
    desc: Run the app.
    cmds:
      - task: gocheck
      - task: goci
      - go run ./cmd/{{.BINARY_NAME}}

  goclean:
    desc: Clean bin
    cmds:
      - rm -rf ./bin

  gobuild:
    desc: Build program.
    vars:
      BUILD_TIME:
        sh: date -u +"%Y-%m-%dT%H:%M:%SZ"
      GIT_DESC:
        sh: git describe --always --dirty --tags --long
      LINKER_FLAG: -s -w -X main.buildTime={{.BUILD_TIME}} -X main.version={{.GIT_DESC}}
    cmds:
      - task: gotest
      - task: goclean
      # CGO_ENABLED=0 GOOS={{.GOOS}} GOARCH={{.GOARCH}} go build -ldflags="{{.LINKER_FLAG}}" -o ./bin/{{.BINARY_NAME}} ./cmd/{{.BINARY_NAME}}
      - CGO_ENABLED=0 go build -ldflags="{{.LINKER_FLAG}}" -o ./bin/{{.BINARY_NAME}} ./cmd/{{.BINARY_NAME}}

  gobuild-docker:
    desc: Build program in Dockerfile.
    cmds:
      - CGO_ENABLED=0 go build -ldflags="{{.LINKER_FLAG}}" -o ./bin/{{.BINARY_NAME}} ./cmd/{{.BINARY_NAME}}
    vars:
      LINKER_FLAG: -s -w

  govendor:
    desc: Run vendor with mod tidy and verify.
    cmds:
      - task: gomod
      - go mod vendor

  gotest:
    desc: Run go test.
    cmds:
      - go test -race -vet=off ./...

  # Generate code if needed (e.g., using `go generate`)
  gogen:
    desc: "Run code generation tools"
    cmds:
      - go generate ./...

  # Run the application with live reload using air (useful in development)
  godev:
    desc: "Run the application with live reload using air"
    cmds:
      - air
